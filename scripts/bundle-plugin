#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
    Bundle a Plugin
    ~~~~~~~~~~~~~~~

    This script creates a .plugin file from a plugin installed in
    the given TextPress instance (which usually is a development
    instance of TextPress).

    The file created can be used to distribute the plugin.

    :copyright: 2008 by Armin Ronacher.
    :license: GNU GPL.
"""
import sys
from os.path import isdir, join, dirname
from optparse import OptionParser


sys.path.append(dirname(__file__))
from _init_textpress import find_instance


def main():
    parser = OptionParser(usage='%prog [options] plugin [output-file]')
    parser.add_option('--instance', '-I', dest='instance',
                      help='Use the path provided as TextPress instance.')
    options, args = parser.parse_args()
    if len(args) not in (1, 2):
        parser.error('incorrect number of arguments')
    instance = options.instance or find_instance()
    if instance is None:
        parser.error('instance not found.  Specify path to instance')

    from textpress import make_textpress
    plugin = make_textpress(instance, True).plugins[args[0]]
    if plugin is None:
        parser.error('Plugin not found')

    output_filename = None
    if len(args) == 2:
        output_filename = args[1]

    if output_filename is None or isdir(output_filename):
        plugin_filename = '%s-%s.plugin' % (
            plugin.filesystem_name,
            plugin.version
        )
        if output_filename is not None:
            output_filename = join(output_filename, plugin_filename)
        else:
            output_filename = plugin_filename

    plugin.dump(output_filename)
    print 'Plugin written to %s' % output_filename


if __name__ == '__main__':
    main()
